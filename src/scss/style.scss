/*
 * 基本設計について
 * このプロジェクトは、基本的にPCファーストで設計されています。
 * 詳細は、_global/_breakpoints.scssを参照してください。
 */

/*
 * リセットCSSについて
 * ブラウザのデフォルトスタイルをリセットします。
 */
@use './bases/destyle' as reset;

/*
 * フォントについて
 * フォントの定義を行います。
 */
@use './bases/font-face' as font-face;

/*
 * 変数について
 * プロジェクト全体で使用される変数を定義します。
 */
@use './bases/variables' as variables;

/*
 * ベースについて
 * 全体の基本的なスタイルを定義します。
 * フォント、色、共通の要素などの基本設定が含まれています。
 */
@use './bases/base' as base;

/*
 * スクリプトについて
 * JavaScriptと連携するスタイルを定義します。
 * JSで追加されるクラスやアニメーション関連のスタイルが含まれています。
 * クラス名は、js-accordionのように命名します。
 */
@use './js' as js;

/*
 * レイアウトについて
 * ページの構造を形成するレイアウト要素を定義します。
 * インナー、その他汎用的なレイアウトなどが含まれています。
 * クラス名は、l-innerのように命名します。
 */
@use './layouts' as layouts;

/*
 * モジュールについて
 * 再利用可能なUIモジュールを定義します。
 * ボタン、フォーム、モーダルなどのモジュールが含まれています。
 * クラス名は、m-buttonのように命名します。
 */
@use './modules' as modules;

/*
 * ページについて
 * 各ページ固有のスタイルを定義します。
 * ページごとのユニークなスタイルや、ページ固有のコンポーネントが含まれています。
 * クラス名は、p-home-blockのように命名します。
 */
@use './pages' as pages;

/*
 * ユーティリティについて
 * 再利用可能なユーティリティクラスを定義します。
 * ユーティリティクラスは、コンポーネントやページのスタイルを簡潔に記述するために使用されます。
 * クラス名は、u-brのように命名します。
 */
@use './utilities' as utilities;

/*
 * プラグインについて
 * WordPressプラグインや外部ライブラリのスタイルを定義します。
 * プラグインのデフォルトスタイルをカスタマイズする際に使用します。
 */
@use './plugin' as plugin;
